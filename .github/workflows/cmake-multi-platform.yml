# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
        os: [ ubuntu-latest, windows-latest ]
        #build_type: [ Release ]
        #c_compiler: [ gcc, cl ]
        #ssl_type: [ StaticSSL, DynamicSSL ]
        #build_mode: [ Normal, ProxyHandshakeAuth, MINI_BUILD_MODE ]
        node-version: [ 18.x ]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            toolset: msvc
            version: 2022
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            toolset: gcc
            version: 22.04
            gcc: 12
          #- build_mode: Normal
          #  cmake_build_mode_string: "-DNeed_ProxyHandshakeAuth=OFF"
          #- build_mode: ProxyHandshakeAuth
          #  cmake_build_mode_string: "-DNeed_ProxyHandshakeAuth=ON"
          #- build_mode: MINI_BUILD_MODE
          #  cmake_build_mode_string: "-DMINI_BUILD_MODE=ON"
          #- ssl_type: StaticSSL
          #  cmake_ssl_type_string: "-DOPENSSL_USE_STATIC_LIBS=ON"
          #- ssl_type: DynamicSSL
          #  cmake_ssl_type_string: "-DOPENSSL_USE_STATIC_LIBS=OFF"
        #exclude:
        #  - os: windows-latest
        #    c_compiler: gcc
        #  - os: windows-latest
        #    c_compiler: clang
        #  - os: ubuntu-latest
        #    c_compiler: cl

    steps:
      - uses: actions/checkout@v3
      # - uses: lukka/get-cmake@latest

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: corepack enable
        run: corepack enable

      - name: Build Web Html Js
        run: |
          yarn install
          yarn run webpack

      - name: Remove File
        uses: Lyoko-Jeremie/js-rm-github-action@master
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/.git
            ${{ github.workspace }}/.idea
            ${{ github.workspace }}/.github

      - name: Upload Check Point 1
        uses: actions/upload-artifact@v3
        with:
          name: CheckPoint1-${{ runner.os }}
          path: ${{ github.workspace }}

      - name: Remove File
        uses: Lyoko-Jeremie/js-rm-github-action@master
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/.git
            ${{ github.workspace }}/.idea
            ${{ github.workspace }}/.github
            ${{ github.workspace }}/.yarn
            ${{ github.workspace }}/.editorconfig
            ${{ github.workspace }}/.gitattributes
            ${{ github.workspace }}/.gitignore
            ${{ github.workspace }}/.yarnrc.yml
            ${{ github.workspace }}/package.json
            ${{ github.workspace }}/tsconfig.json
            ${{ github.workspace }}/yarn.lock
            ${{ github.workspace }}/i18n-table
            ${{ github.workspace }}/i18n
            ${{ github.workspace }}/chart.js
            ${{ github.workspace }}/globalLib.d.ts
            ${{ github.workspace }}/webpack.config.js

      - name: Upload Check Point 2
        uses: actions/upload-artifact@v3
        with:
          name: CheckPoint2-${{ runner.os }}
          path: ${{ github.workspace }}



